外围设备借助于适配器通过总线和CPU实现了互连，并可进行可靠通信．适配器通常也称为I/O接口．
程序中断：如果外设与CPU以中断控制的方式进行通信时，每当外围设备向CPU请求某种动作时，接口模块即发生一个中断请求信号到CPU．例如，如果设备完成了一个操作或设备中存在着一个错误状态，接口即发出中断．
指令流指的是CPU执行的指令序列，数据流指的是根据指令操作要求依次存取数据的序列．从程序运行的角度来看，CPU的基本功能就是对指令流和数据流在时间与空间上实施正确的控制．
通用寄存器可用来存放原始数据和运算结果，有的还可以作为变址寄存器、计数器、地址指针等．
累加寄存器Acc也是一个通用寄存器，它用来暂时存放ALU运算的结果信息
用寄存器是专门用来完成某一种特殊功能的寄存器．CPU中至少要有5个专用的寄存器．它们是：程序计数器（PC）、指令寄存器（IR）、存储器地址寄存器（MAR）、存储器数据寄存器（MDR）、状态标志寄存器（PSWR）.
（1）程序计数器程序计数器又称指令计数器，用来存放正在执行的指令地址或接着要执行的下条指令地址．
指令寄存器指令寄存器用来存放从存储器中取出的指令．当指令从主存取出存于指令寄存器之后，在执行指令的过程中，指令寄存器的内容不允许发生变化，以保证实现指令的全部功能
（3）存储器数据寄存器存储器数据寄存器用来暂时存放由主存储器读出的一条指令或一个数据字；反之，当向主存写入一条指令或一个数据字时，也暂时将它们存放在存储器数据寄存器中．（4）存储器地址寄存器存储器地址寄存器用来保存当前CPU所访问的主存单元的地址．由于主存和CPU之间存在着操作速度上的差别，所以必须使用地址寄存器来保持地址信息，直到主存的读写操作完成为止．当CPU和主存进行信息交换，无论是CPU向主存写数据，还是CPU从主存中读出指令时，都要使用存储器地址寄存器和数据寄存器．（5）状态标志寄存器状态标志寄存器用来存放程序状态字（PSW）．程序状态字的各位表征程序和机器运行的状态，是参与控制程序执行的重要依据之一．它主要包括两部分内容：一是状态标志，如进位标志（CF）、结果为零标志（ZF）等，大多数指令的执行将会影响到这些标志位；二是控制标志，如中断标志、陷阱标志等．状态标志寄存器的位数往往等于机器字长，各类机器的状态标志寄存器的位数和设置位置不尽相同．例如：8086微处理器的状态标志寄存器有16位，如图4.1所示，一共包括9个标志位，其中6个为状态标志，3个为控制标志．
6个状态标志为：·进位标志位（CF）；·辅助进位标志位（AF）；·溢出标志位（OF）；·零标志位（ZF）；·符号标志位（SF）；·奇偶校验标志位（PF）.3个控制标志为：·方向标志（DF），表示串操作指令中字符串操作的方向；·中断允许标志位（IF），表示CPU是否能够响应外部的可屏蔽中断请求；·陷阱标志位（TF），为了方便程序的调试，使处理器的执行进入单步方式而设置的控制标志位．
控制器的主要功能有：① 从主存中取出一条指令，并指出下一条指令在主存中的位置．② 对指令进行译码或测试，产生相应的操作控制信号，以便启动规定的动作．③ 指挥并控制CPU、主存和输入输出设备之间的数据流动方向．运算器的主要功能有：① 执行所有的算术运算；② 执行所有的逻辑运算，并进行逻辑测试．
CPU的字长是指在单位时间内同时处理的二进制数据的位数．CPU按照其处理信息的字长可以分为：8位CPU、16位CPU、32位CPU以及64位CPU等．
地址总线宽度决定了CPU可以访问的最大的物理地址空间，简单地说就是CPU到底能够使用多大容量的主存．例如，Pentium有32位地址线，可寻址的最大容量为232=4096MB（4GB）, Itantium有44位地址线，可寻址的最大容量为244=16TB.
数据总线宽度则决定了CPU与外部Cache、主存以及输入输出设备之间进行一次数据传输的信息量．如果数据总线为32位，每次最多可以读写主存中的32位；如果数据总线为64位，每次最多可以读写主存中的64位．
1．指令部件指令部件的主要任务是完成取指令并分析指令．指令部件包括：（1）程序计数器程序计数器说明见4.1.2节．（2）指令寄存器指令寄存器说明见4.1.2节．（3）指令译码器指令译码器又称操作码译码器或指令功能分析解释器．暂存在指令寄存器中的指令只有在其操作码部分经过译码之后才能识别出这是一条什么样的指令，并产生相应的控制信号提供给微操作信号发生器．（4）地址形成部件地址形成部件根据指令的不同寻址方式，形成操作数的有效地址．在微、小型机中，可以不设专门的地址形成部件，而利用运算器来进行有效地址的计算．2．时序部件时序部件能产生一定的时序信号，以保证机器的各功能部件有节奏地进行信息传送、加工及信息存储．时序部件包括：（1）脉冲源脉冲源用来产生具有一定频率和宽度的时钟脉冲信号，为整个机器提供基准信号．为使主脉冲的频率稳定，一般都使用石英晶体振荡器做脉冲源．当计算机的电源一接通，脉冲源立即按规定的频率重复发出具有一定占空比的时钟脉冲序列，直至关闭电源为止．（2）启停控制逻辑只有通过启停控制逻辑将计算机启动后，主时钟脉冲才允许进入，并启动节拍信号发生器开始工作．启停控制逻辑的作用是根据计算机（2）启停控制逻辑只有通过启停控制逻辑将计算机启动后，主时钟脉冲才允许进入，并启动节拍信号发生器开始工作．启停控制逻辑的作用是根据计算机的需要，可靠地开放或封锁脉冲，控制时序信号的发生或停止，实现对整个机器的正确启动或停止．启停控制逻辑保证启动时输出的第一个脉冲和停止时输出的最后一个脉冲都是完整的脉冲．（3）节拍信号发生器节拍信号发生器又称脉冲分配器．脉冲源产生的脉冲信号，经过节拍信号发生器后产生出各个机器周期中的节拍信号，用以控制计算机完成每一步微操作．3．微操作信号发生器一条指令的取出和执行可以分解成很多最基本的操作，这种最基本的不可再分割的操作称为微操作．微操作信号发生器也称为控制单元（CU）．不同的机器指令具有不同的微操作序列．4．中断控制逻辑中断控制逻辑是用来处理当CPU和外围设备之间采用中断的控制方式进行通信时完成处理的硬件逻辑．
．指令周期和机器周期指令周期是指从取指令、分析指令到执行完该指令所需的全部时间．由于各种指令的操作功能不同，有的简单，有的复杂，因此各种指令的指令周期不尽相同．机器周期又称CPU周期．通常把一个指令周期划分为若干个机器周期，每个机器周期完成一个基本操作．一般机器的CPU周期有取指周期、取数周期、执行周期和中断周期等．所以有：指令周期=i×机器周期
．节拍在一个机器周期内，要完成若干个微操作．这些微操作有的可以同时执行，有的需要按先后次序串行执行．因而应把一个机器周期分为若干个相等的时间段，每一个时间段对应一个电位信号，称为节拍电位信号．节拍的宽度取决于CPU完成一次微操作的时间，如：ALU一次正确的运算，寄存器间的一次传送等．
3．工作脉冲在节拍中执行的有些微操作需要同步定时脉冲，如将稳定的运算结果打入寄存器，又如机器周期状态切换等．为此，在一个节拍内常常设置一个或几个工作脉冲，作为各种同步脉冲的来源．工作脉冲的宽度只占节拍电位宽度的1/n，并处于节拍的末尾部分，以保证所有的触发器都能可靠、稳定地翻转．
在只设置机器周期和时钟周期的微型计算机中，一般不再设置工作脉冲，因为时钟周期既可以作为电位信号，其前、后沿又可以作为脉冲触发信号．

同步控制方式同步控制方式即固定时序控制方式，各项操作都由统一的时序信号控制，在每个机器周期中产生统一数目的节拍电位和工作脉冲．由于不同的指令操作时间长短不一致，所以同步控制方式应以最复杂指令的操作时间作为统一的时间间隔标准

异步控制方式即可变时序控制方式，各项操作不采用统一的时序信号控制，而根据指令或部件的具体情况决定，需要多少时间，就占用多少时间．这是一种“应答”方式，各操作之间的衔接是由“结束—起始”信号来实现的．

这是同步控制和异步控制相结合的方式．实际上现代计算机中几乎没有完全采用同步或完全采用异步的控制方式，大多数是采用联合控制方式．通常的设计思想是：在功能部件内部采用同步方式或以同步方式为主的控制方式，在功能部件之间采用异步方式．

加法指令ADD @ R0, R1这条指令完成的功能是把R0的内容作为主存地址取得一个操作数，再与R1中的另一个操作数相加，最后将结果送回主存中．即实现：（（R0））+（R1）→（R0）

2．转移指令JC A这是一条条件转移指令，若上次运算结果有进位（CF=l），就转移；若上次运算结果无进位（CF=0），就顺序执行下一条指令．设A为位移量，转移地址等于PC的内容加位移量．相应的微操作序列如下．
5.1.1 机器指令的基本格式一条指令就是机器语言的一个语句，它是一组有意义的二进制代码，指令的基本格式如下：[插图]其中操作码指明了指令的操作性质及功能，地址码则给出了操作数的地址
．为了避免CPU与I/O设备争抢访存，可在CPU与主存之间加一级缓存，这样，主存可将CPU要取的信息提前送至缓存，一旦主存在与I/O设备交换时，CPU可直接从缓存中读取所需信息，不必空等而影响效率．
（1）Cache存储体Cache存储体以块为单位与主存交换信息，为加速Cache与主存之间的调动，主存大多采用多体结构，且Cache访存的优先级最高．（2）地址映射变换机构地址映射变换机构是将CPU送来的主存地址转换为Cache地址．由于主存和Cache的块大小相同，块内地址都是相对于块的起始地址的偏移量（即低位地址相同），因此地址变换主要是主存的块号（高位地址）与Cache块号间的转换．而地址变换又与主存地址以什么样的函数关系映射到Cache中（称为地址映射）有关．如果转换后的Cache块已与CPU欲访问的主存块建立了对应关系，即已命中，则CPU可直接访问Cache存储体．如果转换后的Cache块与CPU欲访问的主存块未建立对应关系，即不命中，此刻CPU在访问主存时，不仅将该字从主存取出，同时将它所在的主存块一并调入Cache，供CPU使用．当然，此刻能将主存块调入Cache内，也是由于主存块要装入的Cache块未被占用．否则，已无法将主存块调入Cache内时，就得采用替换策略．（3）替换机构当主存块要装入的Cache块被占用，无法接受来自主存块的信息时，就由Cache内的替换机构按一定的替换算法来确定应从Cache内移出哪个块返回主存，而把新的主存块调入Cache．有关替换算法详见7.3.3节．
Cache-主存地址映射由主存地址映射到Cache地址称为地址映射．地址映射方式很多，有直接映射（固定的映射关系）、全相联映射（灵活性大的映射关系）、组相联映射（上述两种映射的折中）.

图中每个主存块只与一个缓存块相对应，映射关系式为：i=jmodC 或 i=jmod2c其中，i为缓存块号，j 为主存块号，C为缓存块数．映射结果表明每个缓存块对应若干个主存块，如表7.3所示．
采用DMA方式可实现高速I/O设备与主机之间成组数据的交换
．如果在设备准备的同时，CPU不作无谓的等待，而继续执行现行程序，只有当I/O设备准备就绪向CPU提出请求后，再暂时中断CPU现行程序转入I/O服务程序，这便产生了I/O中断．图8.7所示为打印机引起I/O中断时，CPU与打印机并行工作的时间示意图．[插图]图8.7 CPU与打印机并行工作的时间示意图实际的中断过程还要复杂一些，图8.8示出了中断处理过程的详细流程图．当CPU执行完一条现行指令时，如果外设向CPU发出中断请求，那么CPU在满足响应条件的情况下将发出中断响应信号，与此同时关闭中断（“中断屏蔽”触发器置“1”），表示CPU将不再受理另外一个设备的中断．这时，CPU将寻找中断请求源是哪一个设备，保留CPU当前程序计数器（PC）的内容．然后，它将转移到处理该中断源的中断服务程序．进入中断服务程序后首先需要CPU保存原程序的现场信息，然后进入设备服务（如交换数据），最后再恢复原程序的现场信息．在这些动作完成以后，开放中断（“中断屏蔽”触发器置“0”），并返回到原来被中断的主程序的下一条指令．

1．快表（1）快表（translation look-aside buffer, TLB，变换旁查缓冲器）是一个专用的高速缓冲器（通常用相联存储器实现），用于存放近期经常使用的页表项．（2）快表中的内容是页表部分内容的一个副本．（3）快表和页表同时查，快表中有，就能很快地找到对应的物理页号送入主存实地址寄存器，从而做到虽然采用虚存，但访问主存的速度几乎没有下降．2．存储保护存储保护与操作系统相关，它包括两个方面，即存储区域保护和访问方式保护．（1）存储区域保护当多个用户共享主存时，应防止由于一个用户程序出错而破坏其他用户的程序和系统软件，以及一个用户程序不合法地访问未分配给它的主存区域．
（2）访问方式保护对主存信息的使用可以有3种方式：读（R）、写（W）、执行（E），相应的访问方式保护就有R、W、E三者的逻辑组合，共8种，对不同用户给予不同的访问权限．这些访问方式通常作为程序状态字寄存器的保护位，并且和存储区域保护结合起来实现．
3）中断向量地址形成CPU一旦响应了I/O中断，就要暂停现行程序，转去执行该设备的中断服务程序．不同的设备有不同的中断服务程序，每个服务程序都有一个入口地址（中断向量）, CPU必须找到这个入口地址．中断向量地址就是中断服务程序入口地址（中断向量）的存放地址．通常有两种方法寻找入口地址：硬件向量法和软件查询法．① 硬件向量法硬件向量法就是利用硬件产生向量地址，再由向量地址找到中断服务程序的入口地址．向量地址由中断向量地址形成部件产生，这个电路可分散设置在各个接口电路中，也可以设置在CPU内
一般中断服务程序的流程分四大部分：保护现场、中断服务、恢复现场和中断返回．（1）保护现场保护现场有两个含义，其一是保存程序断点；其二是保存通用寄存器和状态寄存器的内容．前者由系统通过硬件自动完成，后者要靠中断服务程序这个软件来完成．具体而言，可在中断服务程序的起始部分安排若干条存数指令，将寄存器的内容存至存储器中保存，或用进栈指令将各寄存器的内容推入堆栈保存，即将程序中断时的“现场”保存起来．（2）中断服务（设备服务）这是中断服务程序的主体部分，对于不同的中断源，其中断服务操作的内容是不同的，例如，打印机要求CPU将需打印的一行字符代码，通过接口送入打印机的缓冲存储器中以供打印机打印．又如，显示设备要求CPU将需要显示的一屏字符代码通过接口送入显示器的显示存储器中．（3）恢复现场这是中断服务程序的结尾部分，要求在退出服务程序前，将原程序中断时的“现场”恢复到原来的寄存器中．通常可用取数指令或出栈指令，将保存在存储器（或堆栈）中的信息回送到原来的寄存器中．（4）中断返回中断服务程序的最后一条指令通常是一条中断返回指令，使其返回到原程序的断点处，以便继续执行原程序．
直接内存访问（DMA），是一种完全由硬件执行交换的工作方式．在这种方式中，DMA控制器完全接管CPU对总线的控制，数据交换不经过CPU，而直接在内存和I/O设备之间进行．DMA方式一般用于高速传送成组数据．DMA控制器将向内存发出地址和控制信号，修改地址．对传送的字的个数计数，并且以中断方式向CPU报告传送操作的结束．
① 从数据传送看，程序中断方式靠程序传送，DMA方式靠硬件传送．② 从CPU响应时间看，程序中断方式是在一条指令执行结束时响应，而DMA方式可在指令周期内的任一存取周期结束时响应．③ 程序中断方式有处理异常事件的能力，DMA方式没有这种能力，主要用于大批数据的传送，如硬盘存取、图像处理、高速数据采集系统等，可提高数据吞吐量．④ 程序中断方式需要中断现行程序，故需保护现场；DMA方式不中断现行程序，无需保护现场．⑤ DMA的优先级比程序中断的优先级高．
