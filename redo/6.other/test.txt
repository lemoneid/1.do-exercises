什么是机器语言？中级问题通常把标识内存或I/O中存储单元的数字称作什么？高级问题CPU中的标志寄存器(Flags Register)有什么作用？怎么样？被这么一问,是不是发现有一些问题无法简单地解释清楚呢？下面,笔者就公布答案并解释。答案初级问题:由二进制数字构成的程序,CPU可以直接对其解释、执行。中级问题:标识内存或I/O中存储单元的数字叫作“地址”。高级问题:用于在运算指令执行后,存储运算结果的某些状态。解释初级问题:不仅是汇编语言,用C语言、Java、BASIC等编程语言编写的程序,也都需要先转换成机器语言才能被执行。机器语言有时也叫作“原生代码”(Native Code)。中级问题:内存中有多个数据存储单元。计算机用从0开始的编号标识每个存储单元,这些编号就是地址(Address)。I/O中的寄存器也可以用地址来标识。哪个寄存器对应哪个地址,取决于CPU和I/O之间的布线方式。高级问题:Flag的本意是“旗子”,这里引申为“标志”。一旦执行了算术运算、逻辑运算、比较运算等指令后,标志寄存器并不会存放运算结果的值,而是会把运算后的某些状态存储起来,例如运算结果是否为0、是否产生了负数、是否有溢出(Overflow)等。

在内存中,每个地址的功能都一样,既可用于存储指令又可用于存储数据。而I/O则不同,地址编号不同(即寄存器的类型不同),功能也就不同
汇编语言的语法十分简单,以至于语法只有一个,即把“标签”“操作码(指令)”和“操作数(指令的对象)”
操作数表示的是指令执行的对象。CPU的寄存器、内存地址、I/O地址或者直接给出的数字都可以作为操作数。如果某条指令需要多个操作数,那么它们之间就要用逗号分割。操作数的个数取决于指令的种类。也有不需要操作数的指令,比如用于停止CPU运转的HALT指令
num:表示1个数值,(num):表示值为num的地址reg、reg1、reg2:名为reg、reg1、reg2的寄存器,(reg):存储在名为reg的寄存器中的地址
计算机的硬件有三个基本要素,CPU、内存和I/O。CPU负责解释、执行程序,从内存或I/O输入数据,在内部进行运算,再把运算结果输出到内存或I/O。内存中存放着程序,程序是指令和数据的集合。I/O中临时存放着用于与周边设备进行输入输出的数据。复习就到这里,下面就来扩充所学到的知识吧。既然数据的运算是在CPU中进行的,那么在CPU内部就应该有存储数据的地方。这种存储数据的地方叫作“寄存器”。虽然也叫寄存器,但是与I/O的寄存器不同,CPU的寄存器不仅能存储数据,还具备对数据进行运算的能力。CPU带有什么样的寄存器取决于CPU的种类。
,A寄存器也叫作“累加器”,是运算的核心。所以连接到它上面的导线也一定会比其他寄存器的多。F寄存器也叫作“标志寄存器”,用于存储运算结果的状态,比如是否发生了进位,数字大小的比较结果等。PC寄存器也叫作“程序指针”,存储着指向CPU接下来要执行的指令的地址。PC寄存器的值会随着滴答滴答的时钟信号自动更新,可以说程序就是依靠不断变化的PC寄存器的值运行起来的。SP寄存器也叫作“栈顶指针”,用于在内存中创建出一块称为“栈”的临时数据存储区域。既然诸位已经熟悉了寄存器的功能,下面笔者就开始介绍代码清单3.
2的内容。这段程序大体上可以分为两部分—“设定Z80 PIO”和“与Z80 PIO进行输入输出”。Z80 PIO带有两个端口(端口A和端口B),用于与周边设备输入输出数据。首先必须为每个端口设定输入输出模式。
接下来的流程与此类似,通过反复进行“读取指令”“解释、执行指令”“更新PC寄存器的值”这3个操作,程序就能运行起来了。一旦执行完最后一行的JP LOOP所对应的机器语言,PC寄存器的值就会被设为标签LOOP对应的地址00010000,这样就可以循环执行同样的操作
估算程序的执行时间
LOOP标签为止的8条指令共需要7+11+7+11+7+11+7+11 = 72个时钟周期;
LOOP标签之后的3条指令共需要11+11+10 = 32个时钟周期。因为微型计算机采用的是2.
5MHz的晶振,也就是1秒可以产生250万个时钟周期,所以每个时钟周期是1秒÷250万 = 0.
0000004秒 = 0.
4微秒。72个时钟周期就是72×0.
4 = 28.
8微秒;
32个时钟周期就是12.
8微秒。这段程序是用LED的亮或灭来表示指拨开关的开关状态,所以LOOP标签之后所执行的操作“输入、输出、跳转”每1秒可以反复执行1秒÷12.
8微秒/次 = 78125次之多,可见计算机的计算速度有多么惊人。
Flow Chart的中文意思是什么？中级问题请说出自然界中河流的三种流动方式。高级问题事件驱动是什么？怎么样？被这么一问,是不是发现有一些问题无法简单地解释清楚呢？下面,笔者就公布答案并解释。答案初级问题:流程图。中级问题:向着一个方向流淌;
流着流着产生支流;
卷成漩涡。高级问题:用户的操作等产生事件后,由事件决定程序的流程。解释初级问题:流程图(Flow Chart)是指用图的形式表示程序的流程。中级问题:与河流的流动方式一样,程序的流程也分为三种。在程序中,把犹如水流向着一个方向流淌的流程称作“顺序执行”;
把犹如水流流着流着产生了支流的流程称作“条件分支”;
把犹如水流卷成漩涡的流程称作“循环”。高级问题:Windows应用程序的运行就是由事件驱动的。例如,选择“打开文件”菜单项就能打开一个窗口,在里面可以指定要打开文件的名称和存储位置。之所以能够这样是因为一旦触发了“选中了菜单项”这个事件,程序的流程就相应地流转到了处理打开窗口的那部分。

程序员一般都是先考虑程序的流程再开始编写程序的。只有编写过程序的人才能体会到“程序是流动着的”
为什么说“程序是流动着的”呢？因为作为计算机大脑的CPU在同一时刻基本上只能够解释、执行一条指令。把指令和作为指令操作对象的数据排列起来就形成了程序。请想象把若干条指令一条挨一条地依次排列到一条长长的纸带上。然后把这条纸带展开抻平,从顶端开始依次解释并执行上面的每条指令,这样看起来程序就好像流动起来了。这就是程序的流程。但是程序的流程并不是只有这一种。
。计算机的硬件系统由CPU、I/O和内存三部分构成。内存中存储着程序,也就是指令和数据。CPU配合着由时钟发生器发出的滴答滴答的时钟信号,从内存中读出指令,然后再依次对其进行解释和执行。CPU中有各种各样的各司其职的寄存器。其中有一个被称为PC (Program Counter,程序计数器)的寄存器,负责存储内存地址,该地址指向下一条即将执行的指令。每解释执行完一条指令,PC寄存器的值就会自动被更新为下一条指令的地址。

顺序执行以外,还有“条件分支”和“循环”
谓算法(Algorithm),就是解决既定问题的步骤
中断处理是指计算机使程序的流程突然跳转到程序中的特定地方,这样的地方被称为中断处理例程(Routine)或是中断处理程序(Handler),而这种跳转是通过CPU所具备的硬件功能实现的。人们通常把中断处理比作是接听电话。假设诸位都正坐在书桌前处理文件,这时突然来电话了,诸位就不得不停下手头的工作去接电话,接完电话再回到之前的工作。像这样由于外部的原因使正常的流程中断,中断后再返回到之前流程的过程就是中断处理流程。在第2章微型计算机的电路图中已经展示过,在Z80 CPU中有[插图]和[插图]两个引脚,它们可以接收从I/O设备发出的中断请求信号[插图]。以硬件形式连接到CPU上的I/O模块会发出中断请求信号,CPU根据该信号执行相应的中断处理程序。在诸位使用的个人计算机上,中断请求信号是由连接到周边设备上的I/O模块发出的。例如每当用户按下键盘上的按键,键盘上的I/O模块就会把中断请求信号发送给CPU。CPU通过这种方式就可以知道有按键被按下,于是就会从I/O设备读入数据(如图4.
14所示)。CPU并不会时刻监控键盘是否有按键被按下。
。因为处理中断请求的程序,或是内置于被烧录在计算机ROM中的BIOS系统(Basic Input Output System,基本输入输出系统)中,或是内置于Windows等操作系统中。诸位只需要先记住以下两点即可:计算机具有硬件上处理中断的能力;
中断一词的英文是Interrupt。
其中的顺序执行是最基本的程序流程,这是因为CPU中的PC寄存器的值会自动更新。条件分支和循环,在高级语言中用程序块表示,在机器语言和汇编语言中用跳转指令表示,在硬件上是通过把PC寄存器的值设为要跳转到的目的地的内存地址来实现。
Algorithm翻译成中文是什么？中级问题辗转相除法是用于计算什么的算法？高级问题程序中的“哨兵”指的是什么？怎么样？被这么一问,是不是发现有一些问题无法简单地解释清楚呢？下面,笔者就公布答案并解释。答案初级问题:Algorithm翻译成中文是“算法”。中级问题:是用于计算最大公约数的算法。高级问题:“哨兵”指的是一种含有特殊值的数据,可用于标识数据的结尾等。解释初级问题:算法(Algorithm)一词的含义,不仅能在计算机术语辞典上查到,就是用普通的英汉辞典也能查到。中级问题:最大公约数指的是两个整数的公共约数中最大的数。使用辗转相除法,就可以通过机械的步骤求出最大公约数。高级问题:字符串的末尾用0表示,链表的末尾用-1表示,像这种特殊的数据就是哨兵。在本章中,我们将展示如何在“线性搜索”算法中灵活地应用哨兵。

算法中解决问题的步骤是明确且有限的
计算机不靠直觉而是机械地解决问题
辗转相除法(又称欧几里得算法)就是一个机械地求解最大公约数问题的算法
所有的信息都可以用数字表示—这是计算机的特性之一。因此为了构造算法,经常会利用到存在于数字间的规律。例如,请思考一下判定石头剪刀布游戏胜负的算法。如果把石头、剪刀、布分别用数字0、1、2表示,把玩家A做出的手势用变量A表示,玩家B做出的手势用变量B表示,那么变量A和B中所存储的值就是这三个数中的某一个。请以此判断玩家A和B的输赢


中级问题:OOP是Object Oriented Programming(面向对象编程)的缩略语。
面向对象编程就是在为现实世界建模
在实际建模的过程中,要进行“组件化”和“省略化”这两步。所谓组件化,就是将可看作是由若干种对象构成的集合的现实世界分割成组件。因为并不需要把现实世界100％地搬入到程序中,所以就可以忽略掉其中的一部分事物。
面向对象编程可以借助UML设计程序
继承指的是通过继承已存在的类所拥有的成员而生成新的类。封装指的是在类所拥有的成员中,隐藏掉那些没有必要展现给该类调用者的成员。多态指的是针对同一种消息,不同的对象可以进行不同的操作。
初级问题:LAN是Local Area Network(局域网)的缩略语。中级问题:TCP/IP 是 Transmission Control Protocol/Internet Protocol(传输控制协议和网际协议)的缩略语。高级问题:所谓MAC地址就是能够标识网卡的编号。解释初级问题:通常把在一栋建筑物内或是一间办公室里的那种小规模网络称作LAN。与此相对,把互联网那样的大规模网络称作WAN(Wide Area Network,广域网)。中级问题:TCP/IP协议族是互联网所使用的一套标准协议。TCP/IP这个名字意味着同时使用了TCP协议和IP协议。高级问题:几乎所有的网卡都会在上市前被分配一个不可变更的MAC地址。本章将介绍查看MAC地址的方法。
路由器负责将LAN连接到WAN上。路由器的一端会先连接到互联网服务提供商的路由器上。而在服务提供商(Provider)那里,又会继续将它们的路由器连接到其他路由器上,通过这种方式最终接入到互联网的主干线缆上
以太网使用了一种略显粗糙的方法连接LAN内的计算机(如图9.
2所示)。以太网中的每台计算机都需要先确认一件事:在网线上有没有其他的计算机正在传输电信号,也就是说要先确保没有人在占用网络,然后才能发送自己想传输的电信号。谁先抢到了网线的使用权,谁就先发送。万一遇到了多台计算机同时都想发送电信号的情况,只需要让这些计算机等待一段长度随机的时间后再重新发送相同的电信号即可。这套机制叫作CSMA/CD(Carrier Sense Multiple Access with Collision Detection,带冲突检测的载波监听多路访问)。所谓载波监听(Carrier Sense),指的是这套机制会去监听(Sense)表示网络是否正在使用的电信号(Carrier)。而多路复用(Multiple Access)指的是多个(Multiple)设备可以同时访问(Access)传输介质。带冲突检测(with Collision Detection)则表示这套机制会去检测(Detection)因同一时刻的传输而导致的电信号冲突(Collision)
作MAC(MediaAccess Control)地址
把设定了IP地址的计算机称为“主机”(Host)。因为路由器也算是计算机的一种,所以它们也有IP地址。在TCP/IP网络中,传输的数据都会携带MAC地址和IP地址两个地址。
通过IP地址就可以轻松地对计算机进行分组管理了。比如用IP地址中第1段到第3段的数值代表公司,用第4段的数值代表公司内部的计算机
常把IP地址中表示分组(即LAN)的部分称作“网络地址”、表示各台计算机(即主机)的部分称为“主机地址
子网掩码的作用是标识出在32比特的IP地址中,从哪一位到哪一位是网络地址,从哪一位到哪一位是主机地址
DHCP的全称是Dynamic Host Configuration Protocol(动态主机设置协议)
DHCP服务器上记录着可以被分配到LAN内计算机的IP地址范围和子网掩码的值
“默认网关”的配置项。通常会把路由器的IP地址设置在这里。也就是说路由器就是从LAN通往互联网世界的入口(Gateway)。路由器的IP地址也可以从DHCP服务器获取。最后再请诸位注意一点,这里选择了“自动获得DNS服务器地址”这一选项。也就是说,DNS服务器的IP地址也可以从DHCP服务器获取。DNS服务器的作用将在稍后的章节中介绍。
路由器的工作原理就是查看附加到数据上的IP地址中的网络地址部分,只要发现这个数据不是发送给LAN内计算机的,就把它发送到LAN外,即互联网的世界中。
分布在世界各地的LAN中的路由器相互交换着信息,互联网正是由于这种信息的交换才得以联通。这种信息被称作“路由表”,用来记录应该把数据转发到哪里。在像互联网这样的网络中,传输路径错综复杂,而路由器就是站在各个岔路口的指路人(如图9.
6所示)。在一台路由器的路由表中,只会记录通往与之相邻的路由器的路径,而并不会记录世界范围内的所有传输路径。
传输的都是附带了IP地址的数据。但是能够标识作为数据最终接收者的网卡的,还是MAC地址。于是在计算机中就加入了一种程序,用于实现由IP地址到MAC地址的转换,这种功能被称作ARP(Address Resolution Protocol,地址解析协议)。ARP的工作方式很有意思。它会对LAN中的所有计算机提问:“有谁的IP地址是210.
160.
205.
80吗？有的话请把你的MAC地址告诉我。”通常把这种同时向所有LAN内的计算机发送数据的过程称作“广播”(Broadcast)。通过广播询问,如果有某台计算机回复了MAC地址,那么这台计算机的IP地址和MAC地址的对应关系也就明确了。ARP的工作流程也是自动进行的,诸位并不会意识到。如果为了查询MAC地址,每回都要进行广播询问,那么查询的效率就会降低。于是ARP还提供了缓存的功能,当向各个计算机都询问完一轮之后,就会把得到的MAC地址和IP地址的对应关系缓存起来(临时保存在内存中)。存起来的这些对应关系信息称作“ARP缓存表”。只要在命令提示符窗口中执行arp -a命令,就可以查看当前ARP缓存表中的内容
对称密钥加密技术和公开密钥加密技术
级问题:XML是Extensible Markup Language(可扩展标记语言)的缩写。中级问题:HTML是用于编写网页的标记语言。XML是用于定义任意标记语言的元语言。高级问题:DOM(Document Object Model,文档对象模型)。


